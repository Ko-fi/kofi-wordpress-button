default | [Given|*] /^(?:|I )am on (?:|the )homepage$/
        | Opens homepage
        | Example: Given I am on "/"
        | Example: When I go to "/"
        | Example: And I go to "/"
        | at `Behat\MinkExtension\Context\MinkContext::iAmOnHomepage()`

default | [When|*] /^(?:|I )go to (?:|the )homepage$/
        | Opens homepage
        | Example: Given I am on "/"
        | Example: When I go to "/"
        | Example: And I go to "/"
        | at `Behat\MinkExtension\Context\MinkContext::iAmOnHomepage()`

default | [Given|*] /^(?:|I )am on "(?P<page>[^"]+)"$/
        | Opens specified page
        | Example: Given I am on "http://batman.com"
        | Example: And I am on "/articles/isBatmanBruceWayne"
        | Example: When I go to "/articles/isBatmanBruceWayne"
        | at `Behat\MinkExtension\Context\MinkContext::visit()`

default | [When|*] /^(?:|I )go to "(?P<page>[^"]+)"$/
        | Opens specified page
        | Example: Given I am on "http://batman.com"
        | Example: And I am on "/articles/isBatmanBruceWayne"
        | Example: When I go to "/articles/isBatmanBruceWayne"
        | at `Behat\MinkExtension\Context\MinkContext::visit()`

default | [When|*] /^(?:|I )reload the page$/
        | Reloads current page
        | Example: When I reload the page
        | Example: And I reload the page
        | at `Behat\MinkExtension\Context\MinkContext::reload()`

default | [When|*] /^(?:|I )move backward one page$/
        | Moves backward one page in history
        | Example: When I move backward one page
        | at `Behat\MinkExtension\Context\MinkContext::back()`

default | [When|*] /^(?:|I )move forward one page$/
        | Moves forward one page in history
        | Example: And I move forward one page
        | at `Behat\MinkExtension\Context\MinkContext::forward()`

default | [When|*] /^(?:|I )press "(?P<button>(?:[^"]|\\")*)"$/
        | Presses button with specified id|name|title|alt|value
        | Example: When I press "Log In"
        | Example: And I press "Log In"
        | at `Behat\MinkExtension\Context\MinkContext::pressButton()`

default | [When|*] /^(?:|I )follow "(?P<link>(?:[^"]|\\")*)"$/
        | Clicks link with specified id|title|alt|text
        | Example: When I follow "Log In"
        | Example: And I follow "Log In"
        | at `Behat\MinkExtension\Context\MinkContext::clickLink()`

default | [When|*] /^(?:|I )fill in "(?P<field>(?:[^"]|\\")*)" with "(?P<value>(?:[^"]|\\")*)"$/
        | Fills in form field with specified id|name|label|value
        | Example: When I fill in "username" with: "bwayne"
        | Example: And I fill in "bwayne" for "username"
        | at `Behat\MinkExtension\Context\MinkContext::fillField()`

default | [When|*] /^(?:|I )fill in "(?P<field>(?:[^"]|\\")*)" with:$/
        | Fills in form field with specified id|name|label|value
        | Example: When I fill in "username" with: "bwayne"
        | Example: And I fill in "bwayne" for "username"
        | at `Behat\MinkExtension\Context\MinkContext::fillField()`

default | [When|*] /^(?:|I )fill in "(?P<value>(?:[^"]|\\")*)" for "(?P<field>(?:[^"]|\\")*)"$/
        | Fills in form field with specified id|name|label|value
        | Example: When I fill in "username" with: "bwayne"
        | Example: And I fill in "bwayne" for "username"
        | at `Behat\MinkExtension\Context\MinkContext::fillField()`

default | [When|*] /^(?:|I )fill in the following:$/
        | Fills in form fields with provided table
        | Example: When I fill in the following"
        |              | username | bruceWayne |
        |              | password | iLoveBats123 |
        | Example: And I fill in the following"
        |              | username | bruceWayne |
        |              | password | iLoveBats123 |
        | at `Behat\MinkExtension\Context\MinkContext::fillFields()`

default | [When|*] /^(?:|I )select "(?P<option>(?:[^"]|\\")*)" from "(?P<select>(?:[^"]|\\")*)"$/
        | Selects option in select field with specified id|name|label|value
        | Example: When I select "Bats" from "user_fears"
        | Example: And I select "Bats" from "user_fears"
        | at `Behat\MinkExtension\Context\MinkContext::selectOption()`

default | [When|*] /^(?:|I )additionally select "(?P<option>(?:[^"]|\\")*)" from "(?P<select>(?:[^"]|\\")*)"$/
        | Selects additional option in select field with specified id|name|label|value
        | Example: When I additionally select "Deceased" from "parents_alive_status"
        | Example: And I additionally select "Deceased" from "parents_alive_status"
        | at `Behat\MinkExtension\Context\MinkContext::additionallySelectOption()`

default | [When|*] /^(?:|I )check "(?P<option>(?:[^"]|\\")*)"$/
        | Checks checkbox with specified id|name|label|value
        | Example: When I check "Pearl Necklace"
        | Example: And I check "Pearl Necklace"
        | at `Behat\MinkExtension\Context\MinkContext::checkOption()`

default | [When|*] /^(?:|I )uncheck "(?P<option>(?:[^"]|\\")*)"$/
        | Unchecks checkbox with specified id|name|label|value
        | Example: When I uncheck "Broadway Plays"
        | Example: And I uncheck "Broadway Plays"
        | at `Behat\MinkExtension\Context\MinkContext::uncheckOption()`

default | [When|*] /^(?:|I )attach the file "(?P<path>[^"]*)" to "(?P<field>(?:[^"]|\\")*)"$/
        | Attaches file to field with specified id|name|label|value
        | Example: When I attach "bwayne_profile.png" to "profileImageUpload"
        | Example: And I attach "bwayne_profile.png" to "profileImageUpload"
        | at `Behat\MinkExtension\Context\MinkContext::attachFileToField()`

default | [Then|*] /^(?:|I )should be on "(?P<page>[^"]+)"$/
        | Checks, that current page PATH is equal to specified
        | Example: Then I should be on "/"
        | Example: And I should be on "/bats"
        | Example: And I should be on "http://google.com"
        | at `Behat\MinkExtension\Context\MinkContext::assertPageAddress()`

default | [Then|*] /^(?:|I )should be on (?:|the )homepage$/
        | Checks, that current page is the homepage
        | Example: Then I should be on the homepage
        | Example: And I should be on the homepage
        | at `Behat\MinkExtension\Context\MinkContext::assertHomepage()`

default | [Then|*] /^the (?i)url(?-i) should match (?P<pattern>"(?:[^"]|\\")*")$/
        | Checks, that current page PATH matches regular expression
        | Example: Then the url should match "superman is dead"
        | Example: Then the uri should match "log in"
        | Example: And the url should match "log in"
        | at `Behat\MinkExtension\Context\MinkContext::assertUrlRegExp()`

default | [Then|*] /^the response status code should be (?P<code>\d+)$/
        | Checks, that current page response status is equal to specified
        | Example: Then the response status code should be 200
        | Example: And the response status code should be 400
        | at `Behat\MinkExtension\Context\MinkContext::assertResponseStatus()`

default | [Then|*] /^the response status code should not be (?P<code>\d+)$/
        | Checks, that current page response status is not equal to specified
        | Example: Then the response status code should not be 501
        | Example: And the response status code should not be 404
        | at `Behat\MinkExtension\Context\MinkContext::assertResponseStatusIsNot()`

default | [Then|*] /^(?:|I )should see "(?P<text>(?:[^"]|\\")*)"$/
        | Checks, that page contains specified text
        | Example: Then I should see "Who is the Batman?"
        | Example: And I should see "Who is the Batman?"
        | at `Behat\MinkExtension\Context\MinkContext::assertPageContainsText()`

default | [Then|*] /^(?:|I )should not see "(?P<text>(?:[^"]|\\")*)"$/
        | Checks, that page doesn't contain specified text
        | Example: Then I should not see "Batman is Bruce Wayne"
        | Example: And I should not see "Batman is Bruce Wayne"
        | at `Behat\MinkExtension\Context\MinkContext::assertPageNotContainsText()`

default | [Then|*] /^(?:|I )should see text matching (?P<pattern>"(?:[^"]|\\")*")$/
        | Checks, that page contains text matching specified pattern
        | Example: Then I should see text matching "Batman, the vigilante"
        | Example: And I should not see "Batman, the vigilante"
        | at `Behat\MinkExtension\Context\MinkContext::assertPageMatchesText()`

default | [Then|*] /^(?:|I )should not see text matching (?P<pattern>"(?:[^"]|\\")*")$/
        | Checks, that page doesn't contain text matching specified pattern
        | Example: Then I should see text matching "Bruce Wayne, the vigilante"
        | Example: And I should not see "Bruce Wayne, the vigilante"
        | at `Behat\MinkExtension\Context\MinkContext::assertPageNotMatchesText()`

default | [Then|*] /^the response should contain "(?P<text>(?:[^"]|\\")*)"$/
        | Checks, that HTML response contains specified string
        | Example: Then the response should contain "Batman is the hero Gotham deserves."
        | Example: And the response should contain "Batman is the hero Gotham deserves."
        | at `Behat\MinkExtension\Context\MinkContext::assertResponseContains()`

default | [Then|*] /^the response should not contain "(?P<text>(?:[^"]|\\")*)"$/
        | Checks, that HTML response doesn't contain specified string
        | Example: Then the response should not contain "Bruce Wayne is a billionaire, play-boy, vigilante."
        | Example: And the response should not contain "Bruce Wayne is a billionaire, play-boy, vigilante."
        | at `Behat\MinkExtension\Context\MinkContext::assertResponseNotContains()`

default | [Then|*] /^(?:|I )should see "(?P<text>(?:[^"]|\\")*)" in the "(?P<element>[^"]*)" element$/
        | Checks, that element with specified CSS contains specified text
        | Example: Then I should see "Batman" in the "heroes_list" element
        | Example: And I should see "Batman" in the "heroes_list" element
        | at `Behat\MinkExtension\Context\MinkContext::assertElementContainsText()`

default | [Then|*] /^(?:|I )should not see "(?P<text>(?:[^"]|\\")*)" in the "(?P<element>[^"]*)" element$/
        | Checks, that element with specified CSS doesn't contain specified text
        | Example: Then I should not see "Bruce Wayne" in the "heroes_alter_egos" element
        | Example: And I should not see "Bruce Wayne" in the "heroes_alter_egos" element
        | at `Behat\MinkExtension\Context\MinkContext::assertElementNotContainsText()`

default | [Then|*] /^the "(?P<element>[^"]*)" element should contain "(?P<value>(?:[^"]|\\")*)"$/
        | Checks, that element with specified CSS contains specified HTML
        | Example: Then the "body" element should contain "style=\"color:black;\""
        | Example: And the "body" element should contain "style=\"color:black;\""
        | at `Behat\MinkExtension\Context\MinkContext::assertElementContains()`

default | [Then|*] /^the "(?P<element>[^"]*)" element should not contain "(?P<value>(?:[^"]|\\")*)"$/
        | Checks, that element with specified CSS doesn't contain specified HTML
        | Example: Then the "body" element should not contain "style=\"color:black;\""
        | Example: And the "body" element should not contain "style=\"color:black;\""
        | at `Behat\MinkExtension\Context\MinkContext::assertElementNotContains()`

default | [Then|*] /^(?:|I )should see an? "(?P<element>[^"]*)" element$/
        | Checks, that element with specified CSS exists on page
        | Example: Then I should see a "body" element
        | Example: And I should see a "body" element
        | at `Behat\MinkExtension\Context\MinkContext::assertElementOnPage()`

default | [Then|*] /^(?:|I )should not see an? "(?P<element>[^"]*)" element$/
        | Checks, that element with specified CSS doesn't exist on page
        | Example: Then I should not see a "canvas" element
        | Example: And I should not see a "canvas" element
        | at `Behat\MinkExtension\Context\MinkContext::assertElementNotOnPage()`

default | [Then|*] /^the "(?P<field>(?:[^"]|\\")*)" field should contain "(?P<value>(?:[^"]|\\")*)"$/
        | Checks, that form field with specified id|name|label|value has specified value
        | Example: Then the "username" field should contain "bwayne"
        | Example: And the "username" field should contain "bwayne"
        | at `Behat\MinkExtension\Context\MinkContext::assertFieldContains()`

default | [Then|*] /^the "(?P<field>(?:[^"]|\\")*)" field should not contain "(?P<value>(?:[^"]|\\")*)"$/
        | Checks, that form field with specified id|name|label|value doesn't have specified value
        | Example: Then the "username" field should not contain "batman"
        | Example: And the "username" field should not contain "batman"
        | at `Behat\MinkExtension\Context\MinkContext::assertFieldNotContains()`

default | [Then|*] /^(?:|I )should see (?P<num>\d+) "(?P<element>[^"]*)" elements?$/
        | Checks, that (?P<num>\d+) CSS elements exist on the page
        | Example: Then I should see 5 "div" elements
        | Example: And I should see 5 "div" elements
        | at `Behat\MinkExtension\Context\MinkContext::assertNumElements()`

default | [Then|*] /^the "(?P<checkbox>(?:[^"]|\\")*)" checkbox should be checked$/
        | Checks, that checkbox with specified id|name|label|value is checked
        | Example: Then the "remember_me" checkbox should be checked
        | Example: And the "remember_me" checkbox is checked
        | at `Behat\MinkExtension\Context\MinkContext::assertCheckboxChecked()`

default | [Then|*] /^the "(?P<checkbox>(?:[^"]|\\")*)" checkbox is checked$/
        | Checks, that checkbox with specified id|name|label|value is checked
        | Example: Then the "remember_me" checkbox should be checked
        | Example: And the "remember_me" checkbox is checked
        | at `Behat\MinkExtension\Context\MinkContext::assertCheckboxChecked()`

default | [Then|*] /^the checkbox "(?P<checkbox>(?:[^"]|\\")*)" (?:is|should be) checked$/
        | Checks, that checkbox with specified id|name|label|value is checked
        | Example: Then the "remember_me" checkbox should be checked
        | Example: And the "remember_me" checkbox is checked
        | at `Behat\MinkExtension\Context\MinkContext::assertCheckboxChecked()`

default | [Then|*] /^the "(?P<checkbox>(?:[^"]|\\")*)" checkbox should (?:be unchecked|not be checked)$/
        | Checks, that checkbox with specified id|name|label|value is unchecked
        | Example: Then the "newsletter" checkbox should be unchecked
        | Example: Then the "newsletter" checkbox should not be checked
        | Example: And the "newsletter" checkbox is unchecked
        | at `Behat\MinkExtension\Context\MinkContext::assertCheckboxNotChecked()`

default | [Then|*] /^the "(?P<checkbox>(?:[^"]|\\")*)" checkbox is (?:unchecked|not checked)$/
        | Checks, that checkbox with specified id|name|label|value is unchecked
        | Example: Then the "newsletter" checkbox should be unchecked
        | Example: Then the "newsletter" checkbox should not be checked
        | Example: And the "newsletter" checkbox is unchecked
        | at `Behat\MinkExtension\Context\MinkContext::assertCheckboxNotChecked()`

default | [Then|*] /^the checkbox "(?P<checkbox>(?:[^"]|\\")*)" should (?:be unchecked|not be checked)$/
        | Checks, that checkbox with specified id|name|label|value is unchecked
        | Example: Then the "newsletter" checkbox should be unchecked
        | Example: Then the "newsletter" checkbox should not be checked
        | Example: And the "newsletter" checkbox is unchecked
        | at `Behat\MinkExtension\Context\MinkContext::assertCheckboxNotChecked()`

default | [Then|*] /^the checkbox "(?P<checkbox>(?:[^"]|\\")*)" is (?:unchecked|not checked)$/
        | Checks, that checkbox with specified id|name|label|value is unchecked
        | Example: Then the "newsletter" checkbox should be unchecked
        | Example: Then the "newsletter" checkbox should not be checked
        | Example: And the "newsletter" checkbox is unchecked
        | at `Behat\MinkExtension\Context\MinkContext::assertCheckboxNotChecked()`

default | [Then|*] /^print current URL$/
        | Prints current URL to console.
        | Example: Then print current URL
        | Example: And print current URL
        | at `Behat\MinkExtension\Context\MinkContext::printCurrentUrl()`

default | [Then|*] /^print last response$/
        | Prints last response to console
        | Example: Then print last response
        | Example: And print last response
        | at `Behat\MinkExtension\Context\MinkContext::printLastResponse()`

default | [Then|*] /^show last response$/
        | Opens last response content in browser
        | Example: Then show last response
        | Example: And show last response
        | at `Behat\MinkExtension\Context\MinkContext::showLastResponse()`

default | [Given|*] /^(?:there are|there is a) posts?:/
        | Create content of the given type.
        | Example: Given there are posts:
        |     | post_type | post_title | post_content | post_status |
        |     | page      | Test Post   | Hello World  | publish     |
        | at `PaulGibbs\WordpressBehatExtension\Context\ContentContext::thereArePosts()`

default | [Given|*] /^(?:I am|they are) viewing (?:a|the)(?: blog)? post(?: "([^"]+)"|:)/
        | Create content, and go to it in the browser.
        | Example: Given I am viewing a post:
        |     | post_type | post_title | post_content | post_status |
        |     | page      | Test Post   | Hello World  | publish     |
        | Example: Given I am viewing the post: "Test Post"
        | at `PaulGibbs\WordpressBehatExtension\Context\ContentContext::iAmViewingBlogPost()`

default | [Given|*] I delete the post :post_title
        | at `PaulGibbs\WordpressBehatExtension\Context\ContentContext::iDeleteThePost()`

default | [Then|*] I should not be able to view the post :post_title
        | at `PaulGibbs\WordpressBehatExtension\Context\ContentContext::iShouldNotBeAbleToViewThePost()`

default | [Given|*] /^(?:I am|they are) on the dashboard/
        | Open the dashboard.
        | Example: Given I am on the dashboard
        | Example: Given I am in wp-admin
        | Example: When I go to the dashboard
        | Example: When I go to wp-admin
        | at `PaulGibbs\WordpressBehatExtension\Context\DashboardContext::iAmOnDashboard()`

default | [Given|*] /^(?:I am|they are) in wp-admin/
        | Open the dashboard.
        | Example: Given I am on the dashboard
        | Example: Given I am in wp-admin
        | Example: When I go to the dashboard
        | Example: When I go to wp-admin
        | at `PaulGibbs\WordpressBehatExtension\Context\DashboardContext::iAmOnDashboard()`

default | [When|*] /^(?:I|they) go to the dashboard/
        | Open the dashboard.
        | Example: Given I am on the dashboard
        | Example: Given I am in wp-admin
        | Example: When I go to the dashboard
        | Example: When I go to wp-admin
        | at `PaulGibbs\WordpressBehatExtension\Context\DashboardContext::iAmOnDashboard()`

default | [When|*] /^(?:I|they) go to wp-admin/
        | Open the dashboard.
        | Example: Given I am on the dashboard
        | Example: Given I am in wp-admin
        | Example: When I go to the dashboard
        | Example: When I go to wp-admin
        | at `PaulGibbs\WordpressBehatExtension\Context\DashboardContext::iAmOnDashboard()`

default | [When|*] I click on the :link link in the header
        | Click a link within the screen header tag.
        | Example: When I click on the "Add New" link in the header
        | at `PaulGibbs\WordpressBehatExtension\Context\DashboardContext::iClickOnHeaderLink()`

default | [Then|*] I should be on the :admin_screen screen
        | Assert the text in the screen header tag matches the given string.
        | Example: Then I should be on the "Posts" screen
        | at `PaulGibbs\WordpressBehatExtension\Context\DashboardContext::iShouldBeOnTheScreen()`

default | [Given|*] I go to the menu :item
        | Go to a given screen on the admin menu.
        | Example: Given I go to the "Users" menu
        | Example: Given I go to the menu "Settings > Reading"
        | at `PaulGibbs\WordpressBehatExtension\Context\DashboardContext::iGoToMenuItem()`

default | [Given|*] I go to the :item menu
        | Go to a given screen on the admin menu.
        | Example: Given I go to the "Users" menu
        | Example: Given I go to the menu "Settings > Reading"
        | at `PaulGibbs\WordpressBehatExtension\Context\DashboardContext::iGoToMenuItem()`

default | [Then|*] /^(?:I|they) should see an? (error|status) message that says "([^"]+)"$/
        | Check the specified notification is on-screen.
        | Example: Then I should see a status message that says "Post published"
        | at `PaulGibbs\WordpressBehatExtension\Context\DashboardContext::iShouldSeeMessageThatSays()`

default | [When|*] the cache is cleared
        | Clear object cache.
        | Example: When the cache is cleared
        | Example: Given the cache has been cleared
        | at `PaulGibbs\WordpressBehatExtension\Context\SiteContext::cacheIsCleared()`

default | [Given|*] the cache has been cleared
        | Clear object cache.
        | Example: When the cache is cleared
        | Example: Given the cache has been cleared
        | at `PaulGibbs\WordpressBehatExtension\Context\SiteContext::cacheIsCleared()`

default | [Given|*] the :name plugin is active
        | Active a plugin.
        | Example: When I activate the "hello" plugin
        | Example: Given the "hello" plugin is active
        | at `PaulGibbs\WordpressBehatExtension\Context\SiteContext::iActivateThePlugin()`

default | [When|*] I activate the :name plugin
        | Active a plugin.
        | Example: When I activate the "hello" plugin
        | Example: Given the "hello" plugin is active
        | at `PaulGibbs\WordpressBehatExtension\Context\SiteContext::iActivateThePlugin()`

default | [When|*] I deactivate the :name plugin
        | Deactivate a plugin.
        | Example: When I deactivate the "hello" plugin
        | at `PaulGibbs\WordpressBehatExtension\Context\SiteContext::iDeactivateThePlugin()`

default | [When|*] I switch the theme to :name
        | at `PaulGibbs\WordpressBehatExtension\Context\SiteContext::iSwitchTheThemeTo()`

default | [Given|*] /^(?:there are|there is a) users?:/
        | Add specified user accounts.
        | Example: Given there are users:
        |     | user_login | user_email        | role          |
        |     | admin      | admin@example.com | administrator |
        | at `PaulGibbs\WordpressBehatExtension\Context\UserContext::thereAreUsers()`

default | [When|*] I delete the :user_login user account
        | Delete the specified user account.
        | Example: When I delete the "test" user account
        | at `PaulGibbs\WordpressBehatExtension\Context\UserContext::iDeleteTheUserAccount()`

default | [When|*] /^(?:I am|they are) viewing posts published by (.+)$/
        | Go to a user's author archive page.
        | Example: When I am viewing posts published by Paul
        | at `PaulGibbs\WordpressBehatExtension\Context\UserContext::iAmViewingAuthorArchive()`

default | [Given|*] /^(?:I am|they are) an anonymous user/
        | Log user out.
        | Example: Given I am an anonymous user
        | Example: When I log out
        | at `PaulGibbs\WordpressBehatExtension\Context\UserContext::iAmAnonymousUser()`

default | [When|*] I log out
        | Log user out.
        | Example: Given I am an anonymous user
        | Example: When I log out
        | at `PaulGibbs\WordpressBehatExtension\Context\UserContext::iAmAnonymousUser()`

default | [Given|*] /^(?:I am|they are) logged in as an? (.+)$/
        | Log user in (with role name).
        | Example: Given I am logged in as an contributor
        | at `PaulGibbs\WordpressBehatExtension\Context\UserContext::iAmLoggedInAsRole()`

default | [Given|*] /^(?:I am|they are) logged in as (?!an? )(.+)$/
        | Log user in (with user name).
        | Example: Given I am logged in as Mince
        | at `PaulGibbs\WordpressBehatExtension\Context\UserContext::iAmLoggedInAsUser()`

default | [Then|*] /^(?:I|they) should not be able to log in as an? (.+)$/
        | Try to log user in (with role name), but expect failure.
        | Example: Then I should not be able to log in as an editor
        | at `PaulGibbs\WordpressBehatExtension\Context\UserContext::iShouldNotBeAbleToLogInAsRole()`

default | [Then|*] /^(?:I|they) should not be able to log in as (.+)$/
        | Try to log user in (with username), but expect failure.
        | Example: Then I should not be able to log in as Scotty
        | at `PaulGibbs\WordpressBehatExtension\Context\UserContext::iShouldNotBeAbleToLogInAsUser()`

default | [Given|*] /^I am on the edit ([a-zA-z_-]+) screen for "([^"]*)"$/
        | Go to the edit post admin page for the referenced post.
        | This step allows you to specify the post type to consider.
        | Example: Given I am on the edit post screen for "Hello World"
        | Example: Given I am on the edit event screen for "Some Event"
        | at `PaulGibbs\WordpressBehatExtension\Context\EditPostContext::iGoToEditScreenForPostType()`

default | [Given|*] /^I am on the edit screen for "(?P<title>[^"]*)"$/
        | Go to the edit post admin page for the referenced post.
        | This step works for all post types.
        | Example: Given I am on the edit screen for "Hello World"
        | Example: Given I am on the edit screen for "Some Event"
        | at `PaulGibbs\WordpressBehatExtension\Context\EditPostContext::iGoToEditScreenFor()`

default | [When|*] /^I change the title to "(?P<title>[^"]*)"$/
        | Change the title on the edit post screen.
        | Example: When I change the title to "Hello World"
        | at `PaulGibbs\WordpressBehatExtension\Context\EditPostContext::iChangeTitleTo()`

default | [When|*] /^I switch to the post content editor's (visual|text) mode$/i
        | Switch the mode of the post content editor.
        | Example: When I switch to the post content editor's Visual mode
        | Example: When I switch to the post content editor's Text mode
        | at `PaulGibbs\WordpressBehatExtension\Context\EditPostContext::iSelectPostContentEditorMode()`

default | [When|*] I enter the following content into the post content editor:
        | Enter the content into the content editor.
        | Example: When I enter the following content into the post content editor:
        |   """
        |   Welcome to WordPress. This is your first post. Edit or delete it, then start writing!
        |   """
        | at `PaulGibbs\WordpressBehatExtension\Context\EditPostContext::iEnterContentIntoPostContentEditor()`

default | [Then|*] /^the post content editor is in (visual|text) mode$/i
        | Assert the mode that the content editor is in.
        | Example: Then The post content editor is in Visual mode
        | Example: Then The post content editor is in Text mode
        | at `PaulGibbs\WordpressBehatExtension\Context\EditPostContext::postContentEditorIsInMode()`

default | [When|*] /^I publish the (post|changes?)$/
        | Press the update/publish button.
        | Example: When I publish the post
        | Example: When I publish the change
        | Example: When I publish the changes
        | at `PaulGibbs\WordpressBehatExtension\Context\EditPostContext::iPressThePublishButton()`

default | [Then|*] I should be on the edit :post_type screen for :post_title
        | Assert that the edit screen for the given post and post type is displayed
        | Example: Then I should be on the edit event screen for "Some Event"
        | Example: Then I should be on the edit post screen for "Hello World"
        | at `PaulGibbs\WordpressBehatExtension\Context\EditPostContext::iAmOnEditScreenForPostType()`

default | [Then|*] I should see the :title metabox
        | Assert that the referenced metabox is visible.
        | The metabox may still be collapsed.
        | Example: Then I should see the "Comments" metabox
        | at `PaulGibbs\WordpressBehatExtension\Context\EditPostContext::iShouldSeeTheMetabox()`

default | [Then|*] I should not see the :title metabox
        | Assert that the referenced metabox is not visible.
        | The metabox may still be collapsed.
        | Example: Then I should not see the "Featured Image" metabox
        | at `PaulGibbs\WordpressBehatExtension\Context\EditPostContext::iShouldNotSeeTheMetabox()`

default | [Given|*] I have the :widget_name widget in :sidebar_name
        | Adds a widget (identified by its ID base) to the sidebar (identified by it's human-readable name, e.g. 'Widget
        | Area', 'Right Sidebar', or 'Footer') with the given arguments.
        | Example: Given I have the "Meta" widget in "Widget Area
        | Example: Given I have the "RSS" widget in "Widget Area"
        |            | Title   | Url                              | Items   |
        |            | My feed | https://wordpress.org/news/feed/ | 3       |
        | at `PaulGibbs\WordpressBehatExtension\Context\WidgetContext::iHaveTheMetaWidgetIn()`

default | [When|*] I search for :search in the toolbar
        | Searches for a term using the toolbar search field
        | Example: When I search for "Hello World" in the toolbar
        | at `PaulGibbs\WordpressBehatExtension\Context\ToolbarContext::iSearchUsingTheToolbar()`

default | [Then|*] I should see :text in the toolbar
        | Clicks the specified link in the toolbar.
        | Example: Then I should see "Howdy, admin" in the toolbar
        | at `PaulGibbs\WordpressBehatExtension\Context\ToolbarContext::iShouldSeeTextInToolbar()`

default | [Then|*] the toolbar should show I am authenticated as :username
        | Checks the authenticated user show in the toolbar.
        | Example: Then the toolbar should show I am authenticated as admin
        | at `PaulGibbs\WordpressBehatExtension\Context\ToolbarContext::theUsernameShouldBe()`

default | [When|*] I follow the toolbar link :link
        | Clicks the specified link in the toolbar.
        | Example: When I follow the toolbar link "New > Page"
        | Example: When I follow the toolbar link "Updates"
        | Example: When I follow the toolbar link "Howdy, admin > Edit My Profile"
        | at `PaulGibbs\WordpressBehatExtension\Context\ToolbarContext::iFollowTheToolbarLink()`
